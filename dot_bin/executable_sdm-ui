#!/bin/bash

EMAIL=""
DISCONNECT_MODE=false
MODE_TEXT="[Connect Mode]"

# Check if flag -d is present
if [[ "$1" == "-d" ]]; then
  DISCONNECT_MODE=true
  MODE_TEXT="[Disconnect Mode]"
fi

NOTIFICATION_TITLE="$MODE_TEXT SDM"

# Store the password securely
function store_password() {
  local password
  password=$(zenity --entry --title="SDM Password" --text="Enter your SDM password" --hide-text)
  echo "$password" | secret-tool store --label="SDM UI" username "$EMAIL" service sdm-credential
  echo "$password"
}

# Retrieve the password
function get_password() {
  local password
  password=$(secret-tool lookup service sdm-credential username "$EMAIL")
  # If no password is found, then ask for it
  if [[ -z "$password" ]]; then
    password=$(store_password "$EMAIL")
  fi
  echo "$password"
}

# Authenticate the user
function authenticate() {
  local data
  data=$(sdm status 2>/dev/null)
  if [[ $? -ne 0 ]]; then
    notify-send -u normal "$NOTIFICATION_TITLE" "No session was found, signing in... üîë"
    local password
    password=$(get_password)
    echo "$password" | sdm login --email "$EMAIL" > /dev/null
    if [[ $? -ne 0 ]]; then
      notify-send -u critical "$NOTIFICATION_TITLE" "Login failed! üò±"
      exit 1
    fi
    notify-send -u normal "$NOTIFICATION_TITLE" "Logged in successfully! üéâ"
  fi
}

# Get the status data
function get_status_data() {
  local data
  data=$(sdm status |
    grep -v "eks" |
    sed 's/not connected/not_connected/g' |
    grep connected |
    tr -s ' ' |
    cut -d ' ' -f 2,3,4 |
    sort -k 2 |
    awk '{print $2,$1,$3}' |
    sed 's/^connected/‚ö°/g' |
    column -t -s ' ' -o ' ')
  echo "$data"
}

# Show the menu for disconnect mode
function show_disconnect_menu() {
  local status_data
  status_data=$(get_status_data)
  # Remove the "not_connected" lines
  status_data=$(echo "$status_data" | grep -v not_connected)
  show_menu "$status_data"
}

# Show the menu for connect mode
function show_connect_menu() {
  local status_data
  status_data=$(get_status_data)
  # Replace the "not_connected" lines with the "üîå" emoji
  status_data=$(echo "$status_data" | sed 's/not_connected/üîå/g')
  show_menu "$status_data"
}

# Show the main menu
function show_menu() {
  local status_data="$1"
  local selected_option
  selected_option=$(echo "$status_data" | rofi -dmenu -p "Select Service" -i -sort -matching fuzzy -markup-rows)

  local status
  local cluster
  local port
  status=$(echo "$selected_option" | cut -d ' ' -f 1)
  cluster=$(echo "$selected_option" | cut -d ' ' -f 2)
  port=$(echo "$selected_option" | cut -d ' ' -f 3)

  if [[ -z "$cluster" ]]; then
    exit 0
  fi

  if [[ $DISCONNECT_MODE = true ]]; then
    notify-send -u normal "$NOTIFICATION_TITLE" "Disconnecting from $cluster...‚è≥"
    sdm disconnect "$cluster" > /dev/null
    if [[ $? -ne 0 ]]; then
      notify-send -u critical "$NOTIFICATION_TITLE" "Disconnect failed! üò±"
      exit 1
    fi
    notify-send -u normal "$NOTIFICATION_TITLE" "‚ùå Disconnected successfully!"
    exit 0
  else
    if [[ "$status" = "‚ö°" ]]; then
      notify-send -u normal "$NOTIFICATION_TITLE" "Copying port <b>$port</b> to clipboard... üìã"
      wl-copy "$port"
      exit 0
    fi
    notify-send -u normal "$NOTIFICATION_TITLE" "Connecting to <b>$cluster</b> üîå"
    sdm connect "$cluster"
    if [[ $? -eq 0 ]]; then
      notify-send -u normal "$NOTIFICATION_TITLE" "Connected to <b>$cluster</b> on port <b>$port</b> ‚ö°"
      wl-copy "$port"
    else
      notify-send -u critical "$NOTIFICATION_TITLE" "Failed to connect to <b>$cluster</b> üò±"
    fi
  fi
}

# Check if every dependency is installed
function check_dependencies() {
  local dependencies=(
    "sdm"
    "wl-copy"
    "rofi"
    "zenity"
    "awk"
    "cut"
    "grep"
    "sed"
    "sort"
    "tr"
    "notify-send"
    "secret-tool"
  )
  for dependency in "${dependencies[@]}"; do
    if ! command -v "$dependency" &>/dev/null; then
      echo "$dependency could not be found"
      exit 1
    fi
  done
}

# Main entry point
function main() {
  authenticate
  notify-send -u normal "$NOTIFICATION_TITLE" "Getting results from SDM...‚è≥" -t 1700
  if [[ $DISCONNECT_MODE = true ]]; then
    show_disconnect_menu
  else
    show_connect_menu
  fi
}

# Check dependencies and execute the main function
check_dependencies
main
